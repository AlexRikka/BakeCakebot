from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ConversationHandler

NAME, PHONE_NUMBER, LOCATION, DELIVERY_TIME, COMMENT = range(5)


def callback_handler(update, context):
    """–ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥ –æ—Ç–ª–æ–≤–ª–µ–Ω–Ω—ã—Ö CallbackQueryHandler-–æ–º."""
    COMMANDS = {
        'pdconsent_refuse': pdconsent_refuse,
        'pdconsent_agreed': pdconsent_agreed,
        'show_prices': show_prices,
        'show_client_orders': show_client_orders,
        'show_delivery_time': show_delivery_time,
        'leave_complaint': leave_complaint,
        'ask_client_name': ask_client_name,
        'ask_comment': ask_comment,
        'registration_success': registration_success,
    }
    COMMANDS[update.callback_query.data](update, context)


def create_keyboard(queryset):
    """–°–æ–∑–¥–∞–µ—Ç –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∏–º–µ–Ω–∞–º–∏ –æ–±—ä–µ–∫—Ç–æ–≤ –∏–∑ Queryset."""
    keyboard = [
        [InlineKeyboardButton(
            item.name,
            callback_data=item.name
        )] for item in queryset
    ]
    return InlineKeyboardMarkup(keyboard)


def start_callback(update, context):
    """–°—Ç–∞—Ä—Ç —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞."""
    update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ—Ä–≤–∏—Å –¥–ª—è –∑–∞–∫–∞–∑–∞ —Ç–æ—Ä—Ç–æ–≤ –æ—Ç BakeCake!\n")
    doc_path = r'./assets/–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.pdf'
    with open(doc_path, 'rb') as f:
        context.bot.sendDocument(chat_id=update.effective_chat.id, document=f)
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
        reply_markup=InlineKeyboardMarkup([[
            InlineKeyboardButton(
                "‚úÖ",
                callback_data="pdconsent_agreed"
            ),
            InlineKeyboardButton(
                "‚ùå",
                callback_data='pdconsent_refuse'
            ),
        ]])
    )


def start_again(update, context):
    doc_path = r'./assets/–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.pdf'
    with open(doc_path, 'rb') as f:
        context.bot.sendDocument(chat_id=update.effective_chat.id, document=f)
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
        reply_markup=InlineKeyboardMarkup([[
            InlineKeyboardButton(
                "‚úÖ",
                callback_data="pdconsent_agreed"
            ),
            InlineKeyboardButton(
                "‚ùå",
                callback_data='pdconsent_refuse'
            ),
        ]])
    )


def pdconsent_refuse(update, context):
    """–ü–æ–ø—Ä–æ—â–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –æ—Ç–∫–∞–∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö."""
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –±–µ–∑ —Å–æ–≥–ª–∞—Å–∏—è –Ω–µ–ª—å–∑—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ –±–æ—Ç–∞."
    )

    start_again(update, context)


def pdconsent_agreed(update, context):
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=InlineKeyboardMarkup([[
            InlineKeyboardButton(
                "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ü–µ–Ω—ã",
                callback_data='show_prices'
            )],
            [InlineKeyboardButton(
                "–ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–∞–∫–∞–∑—ã",
                callback_data='show_client_orders'
            )],
            [InlineKeyboardButton(
                "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞",
                callback_data='show_delivery_time'
            )],
            [InlineKeyboardButton(
                "–û—Å—Ç–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É",
                callback_data='leave_complaint'
            )],
        ])
    )


def show_prices(update, context):
    pass


def show_client_orders(update, context):
    pass


def show_delivery_time(update, context):
    pass


def leave_complaint(update, context):
    pass


# registration
def ask_client_name(update, context):
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–∞–º –ø–æ—Ç—Ä–µ–±—É—é—Ç—Å—è –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:" +
        "–ò–º—è –∏ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è: "
    )
    return NAME


def ask_phone_number(update, context):
    print(update.message.text)
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
    )
    return PHONE_NUMBER


def ask_location(update, context):
    print(update.message.text)
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:",
    )
    return LOCATION


def ask_delivery_time(update, context):
    print(update.message.text)
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —É–¥–æ–±–Ω—É—é –≤–∞–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏.\n\n" +
        "‚ùóÔ∏è –ó–∞ –¥–æ—Å—Ç–∞–≤–∫—É –≤ –±–ª–∏–∂–∞–π—à–∏–µ 24 —á–∞—Å–∞ –ø—Ä–∏–±–∞–≤–ª—è–µ—Ç—Å—è 20% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞.\n\n" +
        "üìÖ –£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.–≥–≥–≥–≥. –ù–∞–ø—Ä–∏–º–µ—Ä: 23.05.2023.\n\n "+
        "‚è± –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫, –≤ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—ä–µ–¥–µ—Ç –∫—É—Ä—å–µ—Ä."+
        "–ù–∞–ø—Ä–∏–º–µ—Ä: —Å 10:00 –¥–æ 12:00. –ù–∞—à –∫—É—Ä—å–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –∑–∞ 30 –º–∏–Ω—É—Ç –¥–æ –ø—Ä–∏–µ–∑–¥–∞.\n\n" +
        "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏:"
    )
    return DELIVERY_TIME


def leave_comment(update, context):
    print(update.message.text)
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–•–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É?",
        reply_markup=InlineKeyboardMarkup([[
            InlineKeyboardButton(
                "–î–∞",
                callback_data="ask_comment"
            ),
            InlineKeyboardButton(
                "–ù–µ—Ç",
                callback_data='registration_success'
            ),
        ]])
    )
    return COMMENT


def ask_comment(update, context):
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É:",
    )
    return COMMENT


def registration_success(update, context):
    if update.message:
        print(update.message.text)
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!",
    )
    return ConversationHandler.END
